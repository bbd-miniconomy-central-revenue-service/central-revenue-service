name: Deploy to Elastic Beanstalk
on:
  push:
    branches:
      - feat/api-scaffolding

env:
  AWS_REGION: "us-east-1"
  AWS_BUCKET: crs-levelup-bucket
  EBS_APP: crs-application
  EBS_ENV: crs-elastic-beanstalk-env

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: CRS.WebApi
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.*

      - name: Install EF Core CLI
        run: dotnet tool install dotnet-ef --global

      - name: Update database
        run: |
          dotnet ef database update --context CrsdbContext --connection ${{ secrets.DB_CONNECTION_STRING }} || exit 1

      - name: Copy appsettings.json file
        run: aws s3 cp s3://crs-levelup-bucket/appsettings.Production.json .

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build

      - name: Test
        run: dotnet test --no-restore --verbosity normal

      - name: Publish
        run: dotnet publish -o ../site

      - name: Zip Package
        run: |
          zip -rj site.zip ../site/*
          zip bundle.zip site.zip ../aws-windows-deployment-manifest.json

      - name: Upload a Build Artifact
        run: aws s3 cp bundle.zip s3://${{ env.AWS_BUCKET }}/

      - name: Create new ElasticBeanstalk Application Version
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EBS_APP }} \
          --source-bundle S3Bucket="${{ env.AWS_BUCKET }}",S3Key="bundle.zip" \
          --version-label "ver-${{ github.sha }}" \
          --description "commit-sha-${{ github.sha }}"

      - name: Deploy new ElasticBeanstalk Application Version
        run: |
          aws elasticbeanstalk update-environment --environment-name ${{ env.EBS_ENV }} --version-label "ver-${{ github.sha }}"
